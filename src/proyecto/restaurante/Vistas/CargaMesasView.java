/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.restaurante.Vistas;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import proyecto.restaurante.Control.MesaData;
import proyecto.restaurante.Entidades.Estado;
import proyecto.restaurante.Entidades.Mesa;

/**
 *
 * @author Alumno
 */
public class CargaMesasView extends javax.swing.JInternalFrame {
    private MesaData mesaData;
    private Mesa m;
    private List<Mesa> listaMesa;
    
    DefaultTableModel modelo=new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column) {
            return jtTablaListaMesa.getSelectedColumn()==1;
        }
    };

    public CargaMesasView() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        estilos();
        armarCabecera();
        jrbMesasActivas.setSelected(true);
        mesaData = new MesaData();
        verificacionDeActividad();
        jrbMesasActivas.setEnabled(false);
        
    }
    private void estilos(){
        jpFondo.setBackground(new Color(35,34,36,210));
        jlTransparenciaCarga.setBackground(new Color(35,34,36,160));
        jlTransparenciaModificar.setBackground(new Color(35,34,36,160));
        //jtTablaListaMesa.setShowGrid(true);
        //jtTablaListaMesa.setShowVerticalLines(true);
        //jtTablaListaMesa.setShowHorizontalLines(true);
        //jtTablaListaMesa.setGridColor(new java.awt.Color(102, 102, 102));
        //JTableHeader header = jtTablaListaMesa.getTableHeader();
        //header.setBackground(new java.awt.Color(255, 255, 255));
        //header.setForeground(new java.awt.Color(51, 51, 51));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpFondo = new javax.swing.JPanel();
        jlTituloIntereno = new javax.swing.JLabel();
        jlCerrar = new javax.swing.JLabel();
        jlTituloTransparenciaCarga = new javax.swing.JLabel();
        jlCapacidad = new javax.swing.JLabel();
        jtCapacidad = new javax.swing.JTextField();
        jbAgregar = new javax.swing.JButton();
        jlTituloTransparenciaModificar = new javax.swing.JLabel();
        jrbMesasActivas = new javax.swing.JRadioButton();
        jrbMesasInactivas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablaListaMesa = new javax.swing.JTable();
        jbModificar = new javax.swing.JButton();
        jbActivar = new javax.swing.JButton();
        jbDesactivar = new javax.swing.JButton();
        jlTransparenciaCarga = new javax.swing.JLabel();
        jlTransparenciaModificar = new javax.swing.JLabel();
        jlFondoImagen = new javax.swing.JLabel();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        setMinimumSize(new java.awt.Dimension(540, 580));
        setPreferredSize(new java.awt.Dimension(540, 590));

        jpFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlTituloIntereno.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlTituloIntereno.setForeground(new java.awt.Color(255, 255, 255));
        jlTituloIntereno.setText("Carga y Modificaci√≥n de Mesas");
        jpFondo.add(jlTituloIntereno, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 290, 40));

        jlCerrar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jlCerrar.setForeground(new java.awt.Color(204, 204, 204));
        jlCerrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCerrar.setText("Exit");
        jlCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlCerrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlCerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlCerrarMouseExited(evt);
            }
        });
        jpFondo.add(jlCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 50, 30));

        jlTituloTransparenciaCarga.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jlTituloTransparenciaCarga.setForeground(new java.awt.Color(255, 255, 255));
        jlTituloTransparenciaCarga.setText("Agregar Mesas:");
        jpFondo.add(jlTituloTransparenciaCarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 130, 20));

        jlCapacidad.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jlCapacidad.setForeground(new java.awt.Color(255, 255, 255));
        jlCapacidad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCapacidad.setText("Capacidad:");
        jpFondo.add(jlCapacidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 120, 30));

        jtCapacidad.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        jtCapacidad.setForeground(new java.awt.Color(102, 102, 102));
        jtCapacidad.setText("cantidad de clientes");
        jtCapacidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCapacidadMouseClicked(evt);
            }
        });
        jtCapacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCapacidadActionPerformed(evt);
            }
        });
        jpFondo.add(jtCapacidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 150, 30));

        jbAgregar.setBackground(new java.awt.Color(153, 153, 0));
        jbAgregar.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jbAgregar.setForeground(new java.awt.Color(51, 51, 51));
        jbAgregar.setText("Agregar");
        jbAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });
        jpFondo.add(jbAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, -1, 30));

        jlTituloTransparenciaModificar.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jlTituloTransparenciaModificar.setForeground(new java.awt.Color(255, 255, 255));
        jlTituloTransparenciaModificar.setText("Listado de Mesas:");
        jpFondo.add(jlTituloTransparenciaModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jrbMesasActivas.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jrbMesasActivas.setForeground(new java.awt.Color(255, 255, 255));
        jrbMesasActivas.setText("Mesas Activas");
        jrbMesasActivas.setBorder(null);
        jrbMesasActivas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrbMesasActivas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMesasActivasActionPerformed(evt);
            }
        });
        jpFondo.add(jrbMesasActivas, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jrbMesasInactivas.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jrbMesasInactivas.setForeground(new java.awt.Color(255, 255, 255));
        jrbMesasInactivas.setText("Mesas Inactivas");
        jrbMesasInactivas.setBorder(null);
        jrbMesasInactivas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrbMesasInactivas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMesasInactivasActionPerformed(evt);
            }
        });
        jpFondo.add(jrbMesasInactivas, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, -1, -1));

        jtTablaListaMesa.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jtTablaListaMesa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtTablaListaMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jtTablaListaMesa);

        jpFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, 250));

        jbModificar.setBackground(new java.awt.Color(153, 153, 0));
        jbModificar.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jbModificar.setForeground(new java.awt.Color(51, 51, 51));
        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });
        jpFondo.add(jbModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, -1, -1));

        jbActivar.setBackground(new java.awt.Color(153, 153, 0));
        jbActivar.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jbActivar.setForeground(new java.awt.Color(51, 51, 51));
        jbActivar.setText("Activar");
        jbActivar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActivarActionPerformed(evt);
            }
        });
        jpFondo.add(jbActivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, -1, -1));

        jbDesactivar.setBackground(new java.awt.Color(153, 153, 0));
        jbDesactivar.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jbDesactivar.setForeground(new java.awt.Color(51, 51, 51));
        jbDesactivar.setText("Desactivar");
        jbDesactivar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDesactivarActionPerformed(evt);
            }
        });
        jpFondo.add(jbDesactivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 510, -1, -1));

        jlTransparenciaCarga.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTransparenciaCarga.setOpaque(true);
        jpFondo.add(jlTransparenciaCarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 46, 500, 110));

        jlTransparenciaModificar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTransparenciaModificar.setOpaque(true);
        jpFondo.add(jlTransparenciaModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 166, 500, 400));

        jlFondoImagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlFondoImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/restaurante/resources/imagenes/FondoInternalFrames.jpg"))); // NOI18N
        jpFondo.add(jlFondoImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 590));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlCerrarMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jlCerrarMouseClicked

    private void jlCerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlCerrarMouseEntered
        // TODO add your handling code here:
        jlCerrar.setForeground(Color.gray);
    }//GEN-LAST:event_jlCerrarMouseEntered

    private void jlCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlCerrarMouseExited
        // TODO add your handling code here:
        jlCerrar.setForeground(Color.white);
    }//GEN-LAST:event_jlCerrarMouseExited

    private void jtCapacidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCapacidadMouseClicked
        // TODO add your handling code here:
        jtCapacidad.setText("");
    }//GEN-LAST:event_jtCapacidadMouseClicked

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        if(jtCapacidad.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Complete la capacidad de la mesa");
            jtCapacidad.setText("");
        }else{
            m = new Mesa();
            try{
                m.setCapacidad(Integer.parseInt(jtCapacidad.getText()));
                m.setEstado(Estado.LIBRE);
                mesaData.crearMesa(m);
                borrarFila();
                CargarMesasActivas();
                jtCapacidad.setForeground(Color.gray);
                jtCapacidad.setText("cantidad de clientes");
        
                
            }catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,"Ingrese numeros para cantidad");
            }
        }
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jtCapacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCapacidadActionPerformed
        if(jtCapacidad.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Complete la capacidad de la mesa");
            jtCapacidad.setText("");
        }else{
            m = new Mesa();
            try{
                m.setCapacidad(Integer.parseInt(jtCapacidad.getText()));
                m.setEstado(Estado.LIBRE);
                mesaData.crearMesa(m);
                borrarFila();
                CargarMesasActivas();
                jtCapacidad.setText("");
                
            }catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,"Ingrese numeros para cantidad");
            }
        }
    }//GEN-LAST:event_jtCapacidadActionPerformed

    private void jrbMesasActivasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMesasActivasActionPerformed
        borrarFila();
        jrbMesasInactivas.setEnabled(true);
        jbActivar.setEnabled(false);
        jbDesactivar.setEnabled(true);
        
        if(jrbMesasInactivas.isSelected()){
            jrbMesasInactivas.setSelected(false);
            CargarMesasActivas();
        }
        jrbMesasActivas.setEnabled(false);
        jbActivar.setEnabled(false);
        jbDesactivar.setEnabled(true);
    }//GEN-LAST:event_jrbMesasActivasActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        int fila=jtTablaListaMesa.getSelectedRow();
        m=new Mesa();
        if(fila!=-1){
            
            int idMesa=Integer.parseInt(String.valueOf(jtTablaListaMesa.getValueAt(fila,0)));
            int capacidad=Integer.parseInt(String.valueOf(jtTablaListaMesa.getValueAt(fila,1)));
            m = mesaData.obtenerMesa(idMesa);
            m.setCapacidad(capacidad);
            mesaData.modificarMesa(m);
            
            //mesaData.modificarCapacidadMesa(idMesa,capacidad);
        }else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar una mesa");
        }
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActivarActionPerformed
        int fila=jtTablaListaMesa.getSelectedRow();
        if(fila!=-1){
            m=new Mesa();
            int idMesa=Integer.parseInt(String.valueOf(jtTablaListaMesa.getValueAt(fila,0)));
            m=mesaData.obtenerMesa(idMesa);
            m.setActividad(true);
            mesaData.modificarMesa(m);
            borrarFila();
            jrbMesasActivas.setEnabled(true);
            jrbMesasInactivas.setEnabled(false);
            CargarMesasActivas();
            jrbMesasActivas.setSelected(true);
            jrbMesasInactivas.setSelected(false);
            jrbMesasActivas.setEnabled(false);
            jrbMesasInactivas.setEnabled(true);
            jbActivar.setEnabled(false);
            jbDesactivar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar una mesa");
        }
    }//GEN-LAST:event_jbActivarActionPerformed

    private void jbDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDesactivarActionPerformed
        int fila=jtTablaListaMesa.getSelectedRow();
        if(fila!=-1){
            m=new Mesa();
            int idMesa=Integer.parseInt(String.valueOf(jtTablaListaMesa.getValueAt(fila,0)));
            m=mesaData.obtenerMesa(idMesa);
            m.setActividad(false);
            mesaData.modificarMesa(m);
            borrarFila();
            jrbMesasActivas.setEnabled(false);
            jrbMesasInactivas.setEnabled(true);
            CargarMesasInactivas();
            jrbMesasActivas.setSelected(false);
            jrbMesasInactivas.setSelected(true);
            jrbMesasActivas.setEnabled(true);
            jrbMesasInactivas.setEnabled(false);
            jbDesactivar.setEnabled(false);
            jbActivar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar una mesa");
        }
    }//GEN-LAST:event_jbDesactivarActionPerformed

    private void jrbMesasInactivasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMesasInactivasActionPerformed
        borrarFila();
        jrbMesasActivas.setEnabled(true);
        jbActivar.setEnabled(true);
        jbDesactivar.setEnabled(false);
        
        if(jrbMesasActivas.isSelected()){
            jrbMesasActivas.setSelected(false);
            CargarMesasInactivas();
        }
        jrbMesasInactivas.setEnabled(false);
        jbDesactivar.setEnabled(false);
        jbActivar.setEnabled(true);
    }//GEN-LAST:event_jrbMesasInactivasActionPerformed

    private void CargarMesasActivas(){
        mesaData.obtenerMesasActivas().forEach((ms) -> {
            modelo.addRow(new Object[]{
                ms.getIdMesa(),
                ms.getCapacidad(),
                ms.getEstado()
            });
        });
    }
    
    private void CargarMesasInactivas(){
        mesaData.obtenerMesasInactivas().forEach((ms) -> {
            modelo.addRow(new Object[]{
                ms.getIdMesa(),
                ms.getCapacidad(),
                ms.getEstado()
            });
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActivar;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbDesactivar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JLabel jlCapacidad;
    private javax.swing.JLabel jlCerrar;
    private javax.swing.JLabel jlFondoImagen;
    private javax.swing.JLabel jlTituloIntereno;
    private javax.swing.JLabel jlTituloTransparenciaCarga;
    private javax.swing.JLabel jlTituloTransparenciaModificar;
    private javax.swing.JLabel jlTransparenciaCarga;
    private javax.swing.JLabel jlTransparenciaModificar;
    private javax.swing.JPanel jpFondo;
    private javax.swing.JRadioButton jrbMesasActivas;
    private javax.swing.JRadioButton jrbMesasInactivas;
    private javax.swing.JTextField jtCapacidad;
    private javax.swing.JTable jtTablaListaMesa;
    // End of variables declaration//GEN-END:variables

    private void borrarFila(){
        int fila=jtTablaListaMesa.getRowCount()-1;
        for(;fila>=0;fila--){
            modelo.removeRow(fila);
        }
    }
    private void armarCabecera(){
        modelo.addColumn("Numero Mesa");
        modelo.addColumn("Capacidad");
        modelo.addColumn("Estado");
        jtTablaListaMesa.setModel(modelo);
    }
    private void verificacionDeActividad(){
        jbActivar.setEnabled(false);
        if(jrbMesasActivas.isSelected()){
            mesaData=new MesaData();
            borrarFila();
            for(Mesa ms:mesaData.obtenerMesasActivas()){
                modelo.addRow(new Object[]{
                    ms.getIdMesa(),
                    ms.getCapacidad(),
                    ms.getEstado()
                });
            }
        }
    }
}
